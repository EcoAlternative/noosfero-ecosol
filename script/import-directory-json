#!/usr/bin/env ruby

require_relative '../config/environment'

def create_category attributes
  return unless attributes.present?

  category = attributes['record']
  unless category
    parent = create_category $categories[attributes['parent_id']]
    name = if Category.where(name: attributes['title']).first then attributes['description'] else attributes['title'] end
    begin
      category = Category.create! environment: $environment, name: name, parent: parent
    rescue => e
      puts "Error \"#{e.message}\" on #{attributes.inspect}"
      exit 1
    end
    attributes['record'] = category
  end
  category
end

$categories = {}

def create_enterprise attributes
  enterprise = Enterprise.new name: attributes['title'],
    identifier: attributes['title'].to_slug,
    lat: attributes['lat'], lng: attributes['lng'],
    description: attributes['description'],
    address: attributes['address'],
    contact_phone: attributes['phone']

  p attributes['email']
  enterprise.organization_website = attributes['website']
  enterprise.contact_email = attributes['email'].try(:strip)

  enterprise.created_at = Time.zone.parse(attributes['created_at_gmt'])
#  p "attributes"
#  pp attributes
#  p "categories"


  if enterprise.valid?
    enterprise.save!

    enterprise.categories = attributes['categories'].map{ |id| 
      if $categories[id.to_i] != nil
        return $categories[id.to_i]['record']
      else 
        puts "Error category not found: #{id}"
        return nil
      end 
    }
    return enterprise
  else
    p "Could not insert enterprise: " + attributes['title'] 
    return nil
  end
end

Categories = JSON.parse File.read ARGV[0]
Enterprises = JSON.parse File.read ARGV[1]

Categories.each{ |category| $categories[category['id'].to_i] = category }

$environment = Environment.default

Time.zone = 'UTC'

$categories.each do |id, attributes|
  pp create_category attributes
end
Enterprises.each do |attributes|
  create_enterprise attributes
end

